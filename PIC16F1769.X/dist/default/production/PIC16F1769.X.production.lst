

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 27 23:39:18 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1769
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Generated 07/09/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1769 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  0110                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011C                     	;# 
   121  011D                     	;# 
   122  011E                     	;# 
   123  011F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  018E                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0197                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  020E                     	;# 
   164  0211                     	;# 
   165  0211                     	;# 
   166  0212                     	;# 
   167  0212                     	;# 
   168  0213                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0214                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  021D                     	;# 
   181  021E                     	;# 
   182  021F                     	;# 
   183  028C                     	;# 
   184  028D                     	;# 
   185  028E                     	;# 
   186  0291                     	;# 
   187  0291                     	;# 
   188  0292                     	;# 
   189  0293                     	;# 
   190  0294                     	;# 
   191  0298                     	;# 
   192  0298                     	;# 
   193  0299                     	;# 
   194  029A                     	;# 
   195  029B                     	;# 
   196  029E                     	;# 
   197  030C                     	;# 
   198  030D                     	;# 
   199  030E                     	;# 
   200  031B                     	;# 
   201  031C                     	;# 
   202  031D                     	;# 
   203  031E                     	;# 
   204  031F                     	;# 
   205  038C                     	;# 
   206  038D                     	;# 
   207  038E                     	;# 
   208  0391                     	;# 
   209  0392                     	;# 
   210  0393                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  0397                     	;# 
   215  0398                     	;# 
   216  0399                     	;# 
   217  039B                     	;# 
   218  039C                     	;# 
   219  039D                     	;# 
   220  039E                     	;# 
   221  039F                     	;# 
   222  040E                     	;# 
   223  0413                     	;# 
   224  0413                     	;# 
   225  0414                     	;# 
   226  0414                     	;# 
   227  0415                     	;# 
   228  0416                     	;# 
   229  0417                     	;# 
   230  0417                     	;# 
   231  0418                     	;# 
   232  041A                     	;# 
   233  041A                     	;# 
   234  041B                     	;# 
   235  041B                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  041E                     	;# 
   240  041F                     	;# 
   241  0493                     	;# 
   242  0493                     	;# 
   243  0494                     	;# 
   244  0495                     	;# 
   245  0496                     	;# 
   246  049A                     	;# 
   247  049A                     	;# 
   248  049B                     	;# 
   249  049C                     	;# 
   250  049D                     	;# 
   251  050F                     	;# 
   252  0510                     	;# 
   253  0511                     	;# 
   254  0512                     	;# 
   255  0513                     	;# 
   256  0514                     	;# 
   257  0515                     	;# 
   258  0516                     	;# 
   259  0590                     	;# 
   260  0591                     	;# 
   261  0592                     	;# 
   262  0592                     	;# 
   263  0592                     	;# 
   264  0593                     	;# 
   265  0593                     	;# 
   266  0594                     	;# 
   267  0595                     	;# 
   268  0595                     	;# 
   269  0595                     	;# 
   270  0596                     	;# 
   271  0596                     	;# 
   272  0597                     	;# 
   273  0598                     	;# 
   274  0598                     	;# 
   275  0599                     	;# 
   276  059A                     	;# 
   277  059A                     	;# 
   278  0617                     	;# 
   279  0617                     	;# 
   280  0618                     	;# 
   281  0619                     	;# 
   282  061A                     	;# 
   283  061A                     	;# 
   284  061B                     	;# 
   285  061C                     	;# 
   286  068D                     	;# 
   287  068E                     	;# 
   288  068F                     	;# 
   289  0690                     	;# 
   290  0691                     	;# 
   291  0692                     	;# 
   292  0693                     	;# 
   293  0694                     	;# 
   294  0695                     	;# 
   295  0696                     	;# 
   296  0697                     	;# 
   297  0698                     	;# 
   298  0699                     	;# 
   299  069A                     	;# 
   300  069B                     	;# 
   301  069C                     	;# 
   302  069D                     	;# 
   303  069E                     	;# 
   304  069F                     	;# 
   305  070D                     	;# 
   306  070E                     	;# 
   307  070F                     	;# 
   308  0710                     	;# 
   309  0711                     	;# 
   310  0712                     	;# 
   311  0713                     	;# 
   312  0714                     	;# 
   313  0715                     	;# 
   314  0716                     	;# 
   315  0717                     	;# 
   316  0718                     	;# 
   317  0719                     	;# 
   318  071A                     	;# 
   319  071B                     	;# 
   320  071C                     	;# 
   321  071D                     	;# 
   322  071E                     	;# 
   323  071F                     	;# 
   324  0794                     	;# 
   325  0795                     	;# 
   326  0796                     	;# 
   327  0797                     	;# 
   328  0798                     	;# 
   329  0799                     	;# 
   330  079A                     	;# 
   331  079B                     	;# 
   332  079C                     	;# 
   333  079D                     	;# 
   334  079E                     	;# 
   335  079F                     	;# 
   336  0D8E                     	;# 
   337  0D8F                     	;# 
   338  0D90                     	;# 
   339  0D91                     	;# 
   340  0D91                     	;# 
   341  0D92                     	;# 
   342  0D93                     	;# 
   343  0D93                     	;# 
   344  0D94                     	;# 
   345  0D95                     	;# 
   346  0D95                     	;# 
   347  0D96                     	;# 
   348  0D97                     	;# 
   349  0D97                     	;# 
   350  0D98                     	;# 
   351  0D99                     	;# 
   352  0D99                     	;# 
   353  0D9A                     	;# 
   354  0D9B                     	;# 
   355  0D9C                     	;# 
   356  0D9C                     	;# 
   357  0D9D                     	;# 
   358  0D9D                     	;# 
   359  0D9E                     	;# 
   360  0D9F                     	;# 
   361  0DA0                     	;# 
   362  0DA1                     	;# 
   363  0DA1                     	;# 
   364  0DA2                     	;# 
   365  0DA3                     	;# 
   366  0DA3                     	;# 
   367  0DA4                     	;# 
   368  0DA5                     	;# 
   369  0DA5                     	;# 
   370  0DA6                     	;# 
   371  0DA7                     	;# 
   372  0DA7                     	;# 
   373  0DA8                     	;# 
   374  0DA9                     	;# 
   375  0DA9                     	;# 
   376  0DAA                     	;# 
   377  0DAB                     	;# 
   378  0DAC                     	;# 
   379  0DAC                     	;# 
   380  0DAD                     	;# 
   381  0DAD                     	;# 
   382  0DAE                     	;# 
   383  0DAF                     	;# 
   384  0DB0                     	;# 
   385  0E0F                     	;# 
   386  0E10                     	;# 
   387  0E11                     	;# 
   388  0E12                     	;# 
   389  0E13                     	;# 
   390  0E14                     	;# 
   391  0E15                     	;# 
   392  0E16                     	;# 
   393  0E17                     	;# 
   394  0E19                     	;# 
   395  0E19                     	;# 
   396  0E19                     	;# 
   397  0E1A                     	;# 
   398  0E1B                     	;# 
   399  0E1C                     	;# 
   400  0E1C                     	;# 
   401  0E1C                     	;# 
   402  0E1D                     	;# 
   403  0E1E                     	;# 
   404  0E1F                     	;# 
   405  0E1F                     	;# 
   406  0E1F                     	;# 
   407  0E20                     	;# 
   408  0E21                     	;# 
   409  0E22                     	;# 
   410  0E24                     	;# 
   411  0E25                     	;# 
   412  0E28                     	;# 
   413  0E29                     	;# 
   414  0E2A                     	;# 
   415  0E2B                     	;# 
   416  0E2C                     	;# 
   417  0E2D                     	;# 
   418  0E2E                     	;# 
   419  0E2F                     	;# 
   420  0E30                     	;# 
   421  0E31                     	;# 
   422  0E32                     	;# 
   423  0E33                     	;# 
   424  0E34                     	;# 
   425  0E35                     	;# 
   426  0E90                     	;# 
   427  0E91                     	;# 
   428  0E92                     	;# 
   429  0E94                     	;# 
   430  0E95                     	;# 
   431  0E9C                     	;# 
   432  0E9D                     	;# 
   433  0E9E                     	;# 
   434  0E9F                     	;# 
   435  0EA0                     	;# 
   436  0EA1                     	;# 
   437  0EA2                     	;# 
   438  0EA3                     	;# 
   439  0EA4                     	;# 
   440  0EA5                     	;# 
   441  0EA6                     	;# 
   442  0EA7                     	;# 
   443  0F0F                     	;# 
   444  0F10                     	;# 
   445  0F11                     	;# 
   446  0F12                     	;# 
   447  0F13                     	;# 
   448  0F14                     	;# 
   449  0F15                     	;# 
   450  0F16                     	;# 
   451  0F17                     	;# 
   452  0F18                     	;# 
   453  0F19                     	;# 
   454  0F1A                     	;# 
   455  0F1B                     	;# 
   456  0F1C                     	;# 
   457  0F1D                     	;# 
   458  0F1E                     	;# 
   459  0F1F                     	;# 
   460  0F20                     	;# 
   461  0F21                     	;# 
   462  0F22                     	;# 
   463  0F23                     	;# 
   464  0F24                     	;# 
   465  0F25                     	;# 
   466  0F26                     	;# 
   467  0F27                     	;# 
   468  0F28                     	;# 
   469  0F29                     	;# 
   470  0F2A                     	;# 
   471  0F2B                     	;# 
   472  0F2C                     	;# 
   473  0F2D                     	;# 
   474  0FE4                     	;# 
   475  0FE5                     	;# 
   476  0FE6                     	;# 
   477  0FE7                     	;# 
   478  0FE8                     	;# 
   479  0FE9                     	;# 
   480  0FEA                     	;# 
   481  0FEB                     	;# 
   482  0FED                     	;# 
   483  0FEE                     	;# 
   484  0FEF                     	;# 
   485  008E                     _TRISCbits	set	142
   486  009B                     _ADRESL	set	155
   487  009C                     _ADRESH	set	156
   488  009D                     _ADCON0bits	set	157
   489  009E                     _ADCON1	set	158
   490  009D                     _ADCON0	set	157
   491  008C                     _TRISAbits	set	140
   492  010E                     _LATCbits	set	270
   493  018C                     _ANSELA	set	396
   494                           
   495                           	psect	cinit
   496  07FD                     start_initialization:	
   497                           ; #config settings
   498                           
   499  07FD                     __initialization:
   500  07FD                     end_of_initialization:	
   501                           ;End of C runtime variable initialization code
   502                           
   503  07FD                     __end_of__initialization:
   504  07FD  0020               	movlb	0
   505  07FE  3186  2EAD         	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	cstackCOMMON
   508  0070                     __pcstackCOMMON:
   509  0070                     ?_ADC_Init:
   510  0070                     ??_ADC_Init:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_delay_us:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_main:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_ADC_Read:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?___lmul:	
   523                           ; 2 bytes @ 0x0
   524                           
   525  0070                     delay_us@us:	
   526                           ; 4 bytes @ 0x0
   527                           
   528  0070                     ___lmul@multiplier:	
   529                           ; 2 bytes @ 0x0
   530                           
   531                           
   532                           ; 4 bytes @ 0x0
   533  0070                     	ds	2
   534  0072                     ??_ADC_Read:
   535  0072                     ??_delay_us:	
   536                           ; 1 bytes @ 0x2
   537                           
   538                           
   539                           ; 1 bytes @ 0x2
   540  0072                     	ds	2
   541  0074                     ___lmul@multiplicand:
   542                           
   543                           ; 4 bytes @ 0x4
   544  0074                     	ds	4
   545  0078                     ??___lmul:
   546  0078                     ___lmul@product:	
   547                           ; 1 bytes @ 0x8
   548                           
   549                           
   550                           ; 4 bytes @ 0x8
   551  0078                     	ds	4
   552  007C                     ??___aldiv:
   553                           
   554                           ; 1 bytes @ 0xC
   555  007C                     	ds	1
   556                           
   557                           	psect	cstackBANK0
   558  0020                     __pcstackBANK0:
   559  0020                     ?___aldiv:
   560  0020                     ___aldiv@divisor:	
   561                           ; 4 bytes @ 0x0
   562                           
   563                           
   564                           ; 4 bytes @ 0x0
   565  0020                     	ds	4
   566  0024                     ___aldiv@dividend:
   567                           
   568                           ; 4 bytes @ 0x4
   569  0024                     	ds	4
   570  0028                     ___aldiv@counter:
   571                           
   572                           ; 1 bytes @ 0x8
   573  0028                     	ds	1
   574  0029                     ___aldiv@sign:
   575                           
   576                           ; 1 bytes @ 0x9
   577  0029                     	ds	1
   578  002A                     ___aldiv@quotient:
   579                           
   580                           ; 4 bytes @ 0xA
   581  002A                     	ds	4
   582  002E                     ?_map:
   583  002E                     map@x:	
   584                           ; 4 bytes @ 0xE
   585                           
   586                           
   587                           ; 4 bytes @ 0xE
   588  002E                     	ds	4
   589  0032                     map@in_min:
   590                           
   591                           ; 4 bytes @ 0x12
   592  0032                     	ds	4
   593  0036                     map@in_max:
   594                           
   595                           ; 4 bytes @ 0x16
   596  0036                     	ds	4
   597  003A                     map@out_min:
   598                           
   599                           ; 4 bytes @ 0x1A
   600  003A                     	ds	4
   601  003E                     map@out_max:
   602                           
   603                           ; 4 bytes @ 0x1E
   604  003E                     	ds	4
   605  0042                     ??_map:
   606                           
   607                           ; 1 bytes @ 0x22
   608  0042                     	ds	16
   609  0052                     ??_main:
   610                           
   611                           ; 1 bytes @ 0x32
   612  0052                     	ds	2
   613  0054                     main@adc_value:
   614                           
   615                           ; 2 bytes @ 0x34
   616  0054                     	ds	2
   617  0056                     main@period_us:
   618                           
   619                           ; 2 bytes @ 0x36
   620  0056                     	ds	2
   621  0058                     main@half_period:
   622                           
   623                           ; 2 bytes @ 0x38
   624  0058                     	ds	2
   625                           
   626                           	psect	maintext
   627  06AD                     __pmaintext:	
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 56 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  half_period     2   56[BANK0 ] unsigned short 
   638 ;;  period_us       2   54[BANK0 ] unsigned short 
   639 ;;  adc_value       2   52[BANK0 ] unsigned short 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0, pclath, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : B1F/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   650 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   652 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
   653 ;;Total ram usage:        8 bytes
   654 ;; Hardware stack levels required when called: 2
   655 ;; This function calls:
   656 ;;		_ADC_Init
   657 ;;		_ADC_Read
   658 ;;		_delay_us
   659 ;;		_map
   660 ;; This function is called by:
   661 ;;		Startup code after reset
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665  06AD                     _main:	
   666                           ;psect for function _main
   667                           
   668  06AD                     l738:	
   669                           ;incstack = 0
   670                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   671                           
   672                           
   673                           ;main.c: 57:     TRISCbits.TRISC4 = 0;
   674  06AD  0021               	movlb	1	; select bank1
   675  06AE  120E               	bcf	14,4	;volatile
   676                           
   677                           ;main.c: 58:     LATCbits.LATC4 = 0;
   678  06AF  0022               	movlb	2	; select bank2
   679  06B0  120E               	bcf	14,4	;volatile
   680  06B1                     l740:
   681                           
   682                           ;main.c: 60:     ADC_Init();
   683  06B1  3186  2651  3186   	fcall	_ADC_Init
   684  06B4                     l742:
   685                           
   686                           ;main.c: 63:         uint16_t adc_value = ADC_Read();
   687  06B4  3186  265B  3186   	fcall	_ADC_Read
   688  06B7  0871               	movf	?_ADC_Read+1,w
   689  06B8  0020               	movlb	0	; select bank0
   690  06B9  00D5               	movwf	main@adc_value+1
   691  06BA  0870               	movf	?_ADC_Read,w
   692  06BB  00D4               	movwf	main@adc_value
   693  06BC                     l744:
   694                           
   695                           ;main.c: 66:         uint16_t period_us = map(adc_value, 0, 1023, 3, 2);
   696  06BC  0854               	movf	main@adc_value,w
   697  06BD  00AE               	movwf	map@x
   698  06BE  0855               	movf	main@adc_value+1,w
   699  06BF  00AF               	movwf	map@x+1
   700  06C0  01B0               	clrf	map@x+2
   701  06C1  01B1               	clrf	map@x+3
   702  06C2  3000               	movlw	0
   703  06C3  00B5               	movwf	map@in_min+3
   704  06C4  3000               	movlw	0
   705  06C5  00B4               	movwf	map@in_min+2
   706  06C6  3000               	movlw	0
   707  06C7  00B3               	movwf	map@in_min+1
   708  06C8  3000               	movlw	0
   709  06C9  00B2               	movwf	map@in_min
   710  06CA  3000               	movlw	0
   711  06CB  00B9               	movwf	map@in_max+3
   712  06CC  3000               	movlw	0
   713  06CD  00B8               	movwf	map@in_max+2
   714  06CE  3003               	movlw	3
   715  06CF  00B7               	movwf	map@in_max+1
   716  06D0  30FF               	movlw	255
   717  06D1  00B6               	movwf	map@in_max
   718  06D2  3000               	movlw	0
   719  06D3  00BD               	movwf	map@out_min+3
   720  06D4  3000               	movlw	0
   721  06D5  00BC               	movwf	map@out_min+2
   722  06D6  3000               	movlw	0
   723  06D7  00BB               	movwf	map@out_min+1
   724  06D8  3003               	movlw	3
   725  06D9  00BA               	movwf	map@out_min
   726  06DA  3000               	movlw	0
   727  06DB  00C1               	movwf	map@out_max+3
   728  06DC  3000               	movlw	0
   729  06DD  00C0               	movwf	map@out_max+2
   730  06DE  3000               	movlw	0
   731  06DF  00BF               	movwf	map@out_max+1
   732  06E0  3002               	movlw	2
   733  06E1  00BE               	movwf	map@out_max
   734  06E2  3187  270B  3186   	fcall	_map
   735  06E5  0020               	movlb	0	; select bank0
   736  06E6  082F               	movf	?_map+1,w
   737  06E7  00D7               	movwf	main@period_us+1
   738  06E8  082E               	movf	?_map,w
   739  06E9  00D6               	movwf	main@period_us
   740  06EA                     l746:
   741                           
   742                           ;main.c: 67:         uint16_t half_period = period_us / 2;
   743  06EA  0857               	movf	main@period_us+1,w
   744  06EB  00D3               	movwf	??_main+1
   745  06EC  0856               	movf	main@period_us,w
   746  06ED  00D2               	movwf	??_main
   747  06EE  36D3               	lsrf	??_main+1,f
   748  06EF  0CD2               	rrf	??_main,f
   749  06F0  0852               	movf	??_main,w
   750  06F1  00D8               	movwf	main@half_period
   751  06F2  0853               	movf	??_main+1,w
   752  06F3  00D9               	movwf	main@half_period+1
   753  06F4                     l748:
   754                           
   755                           ;main.c: 69:         LATCbits.LATC4 = 1;
   756  06F4  0022               	movlb	2	; select bank2
   757  06F5  160E               	bsf	14,4	;volatile
   758  06F6                     l750:
   759                           
   760                           ;main.c: 70:         delay_us(half_period);
   761  06F6  0020               	movlb	0	; select bank0
   762  06F7  0859               	movf	main@half_period+1,w
   763  06F8  00F1               	movwf	delay_us@us+1
   764  06F9  0858               	movf	main@half_period,w
   765  06FA  00F0               	movwf	delay_us@us
   766  06FB  3186  266A  3186   	fcall	_delay_us
   767  06FE                     l752:
   768                           
   769                           ;main.c: 72:         LATCbits.LATC4 = 0;
   770  06FE  0022               	movlb	2	; select bank2
   771  06FF  120E               	bcf	14,4	;volatile
   772  0700                     l754:
   773                           
   774                           ;main.c: 73:         delay_us(half_period);
   775  0700  0020               	movlb	0	; select bank0
   776  0701  0859               	movf	main@half_period+1,w
   777  0702  00F1               	movwf	delay_us@us+1
   778  0703  0858               	movf	main@half_period,w
   779  0704  00F0               	movwf	delay_us@us
   780  0705  3186  266A  3186   	fcall	_delay_us
   781  0708  2EB4               	goto	l742
   782  0709  3180  2802         	ljmp	start
   783  070B                     __end_of_main:
   784                           
   785                           	psect	text1
   786  070B                     __ptext1:	
   787 ;; *************** function _map *****************
   788 ;; Defined at:
   789 ;;		line 32 in file "main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  x               4   14[BANK0 ] long 
   792 ;;  in_min          4   18[BANK0 ] long 
   793 ;;  in_max          4   22[BANK0 ] long 
   794 ;;  out_min         4   26[BANK0 ] long 
   795 ;;  out_max         4   30[BANK0 ] long 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  4   14[BANK0 ] long 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   807 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
   808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   809 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
   810 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
   811 ;;Total ram usage:       36 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 1
   814 ;; This function calls:
   815 ;;		___aldiv
   816 ;;		___lmul
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822  070B                     _map:	
   823                           ;psect for function _map
   824                           
   825  070B                     l718:	
   826                           ;incstack = 0
   827                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
   828                           
   829                           
   830                           ;main.c: 33:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min
      +                          ;
   831  070B  0020               	movlb	0	; select bank0
   832  070C  0832               	movf	map@in_min,w
   833  070D  0236               	subwf	map@in_max,w
   834  070E  00C2               	movwf	??_map
   835  070F  0833               	movf	map@in_min+1,w
   836  0710  3B37               	subwfb	map@in_max+1,w
   837  0711  00C3               	movwf	??_map+1
   838  0712  0834               	movf	map@in_min+2,w
   839  0713  3B38               	subwfb	map@in_max+2,w
   840  0714  00C4               	movwf	??_map+2
   841  0715  0835               	movf	map@in_min+3,w
   842  0716  3B39               	subwfb	map@in_max+3,w
   843  0717  00C5               	movwf	??_map+3
   844  0718  0845               	movf	??_map+3,w
   845  0719  00A3               	movwf	___aldiv@divisor+3
   846  071A  0844               	movf	??_map+2,w
   847  071B  00A2               	movwf	___aldiv@divisor+2
   848  071C  0843               	movf	??_map+1,w
   849  071D  00A1               	movwf	___aldiv@divisor+1
   850  071E  0842               	movf	??_map,w
   851  071F  00A0               	movwf	___aldiv@divisor
   852  0720  0832               	movf	map@in_min,w
   853  0721  022E               	subwf	map@x,w
   854  0722  00C6               	movwf	??_map+4
   855  0723  0833               	movf	map@in_min+1,w
   856  0724  3B2F               	subwfb	map@x+1,w
   857  0725  00C7               	movwf	??_map+5
   858  0726  0834               	movf	map@in_min+2,w
   859  0727  3B30               	subwfb	map@x+2,w
   860  0728  00C8               	movwf	??_map+6
   861  0729  0835               	movf	map@in_min+3,w
   862  072A  3B31               	subwfb	map@x+3,w
   863  072B  00C9               	movwf	??_map+7
   864  072C  0849               	movf	??_map+7,w
   865  072D  00F3               	movwf	___lmul@multiplier+3
   866  072E  0848               	movf	??_map+6,w
   867  072F  00F2               	movwf	___lmul@multiplier+2
   868  0730  0847               	movf	??_map+5,w
   869  0731  00F1               	movwf	___lmul@multiplier+1
   870  0732  0846               	movf	??_map+4,w
   871  0733  00F0               	movwf	___lmul@multiplier
   872  0734  083A               	movf	map@out_min,w
   873  0735  023E               	subwf	map@out_max,w
   874  0736  00CA               	movwf	??_map+8
   875  0737  083B               	movf	map@out_min+1,w
   876  0738  3B3F               	subwfb	map@out_max+1,w
   877  0739  00CB               	movwf	??_map+9
   878  073A  083C               	movf	map@out_min+2,w
   879  073B  3B40               	subwfb	map@out_max+2,w
   880  073C  00CC               	movwf	??_map+10
   881  073D  083D               	movf	map@out_min+3,w
   882  073E  3B41               	subwfb	map@out_max+3,w
   883  073F  00CD               	movwf	??_map+11
   884  0740  084D               	movf	??_map+11,w
   885  0741  00F7               	movwf	___lmul@multiplicand+3
   886  0742  084C               	movf	??_map+10,w
   887  0743  00F6               	movwf	___lmul@multiplicand+2
   888  0744  084B               	movf	??_map+9,w
   889  0745  00F5               	movwf	___lmul@multiplicand+1
   890  0746  084A               	movf	??_map+8,w
   891  0747  00F4               	movwf	___lmul@multiplicand
   892  0748  3186  267A  3187   	fcall	___lmul
   893  074B  0873               	movf	?___lmul+3,w
   894  074C  0020               	movlb	0	; select bank0
   895  074D  00A7               	movwf	___aldiv@dividend+3
   896  074E  0872               	movf	?___lmul+2,w
   897  074F  00A6               	movwf	___aldiv@dividend+2
   898  0750  0871               	movf	?___lmul+1,w
   899  0751  00A5               	movwf	___aldiv@dividend+1
   900  0752  0870               	movf	?___lmul,w
   901  0753  00A4               	movwf	___aldiv@dividend
   902  0754  3187  276D  3187   	fcall	___aldiv
   903  0757  0020               	movlb	0	; select bank0
   904  0758  0820               	movf	?___aldiv,w
   905  0759  073A               	addwf	map@out_min,w
   906  075A  00CE               	movwf	??_map+12
   907  075B  0821               	movf	?___aldiv+1,w
   908  075C  3D3B               	addwfc	map@out_min+1,w
   909  075D  00CF               	movwf	??_map+13
   910  075E  0822               	movf	?___aldiv+2,w
   911  075F  3D3C               	addwfc	map@out_min+2,w
   912  0760  00D0               	movwf	??_map+14
   913  0761  0823               	movf	?___aldiv+3,w
   914  0762  3D3D               	addwfc	map@out_min+3,w
   915  0763  00D1               	movwf	??_map+15
   916  0764  0851               	movf	??_map+15,w
   917  0765  00B1               	movwf	?_map+3
   918  0766  0850               	movf	??_map+14,w
   919  0767  00B0               	movwf	?_map+2
   920  0768  084F               	movf	??_map+13,w
   921  0769  00AF               	movwf	?_map+1
   922  076A  084E               	movf	??_map+12,w
   923  076B  00AE               	movwf	?_map
   924  076C                     l23:
   925  076C  0008               	return
   926  076D                     __end_of_map:
   927                           
   928                           	psect	text2
   929  067A                     __ptext2:	
   930 ;; *************** function ___lmul *****************
   931 ;; Defined at:
   932 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  multiplier      4    0[COMMON] unsigned long 
   935 ;;  multiplicand    4    4[COMMON] unsigned long 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  product         4    8[COMMON] unsigned long 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  4    0[COMMON] unsigned long 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   948 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   950 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   951 ;;Total ram usage:       12 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_map
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960  067A                     ___lmul:	
   961                           ;psect for function ___lmul
   962                           
   963  067A                     l664:	
   964                           ;incstack = 0
   965                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   966                           
   967  067A  3000               	movlw	0
   968  067B  00FB               	movwf	___lmul@product+3
   969  067C  3000               	movlw	0
   970  067D  00FA               	movwf	___lmul@product+2
   971  067E  3000               	movlw	0
   972  067F  00F9               	movwf	___lmul@product+1
   973  0680  3000               	movlw	0
   974  0681  00F8               	movwf	___lmul@product
   975  0682                     l666:
   976  0682  1C70               	btfss	___lmul@multiplier,0
   977  0683  2E85               	goto	u171
   978  0684  2E86               	goto	u170
   979  0685                     u171:
   980  0685  2E8E               	goto	l670
   981  0686                     u170:
   982  0686                     l668:
   983  0686  0874               	movf	___lmul@multiplicand,w
   984  0687  07F8               	addwf	___lmul@product,f
   985  0688  0875               	movf	___lmul@multiplicand+1,w
   986  0689  3DF9               	addwfc	___lmul@product+1,f
   987  068A  0876               	movf	___lmul@multiplicand+2,w
   988  068B  3DFA               	addwfc	___lmul@product+2,f
   989  068C  0877               	movf	___lmul@multiplicand+3,w
   990  068D  3DFB               	addwfc	___lmul@product+3,f
   991  068E                     l670:
   992  068E  3001               	movlw	1
   993  068F                     u185:
   994  068F  35F4               	lslf	___lmul@multiplicand,f
   995  0690  0DF5               	rlf	___lmul@multiplicand+1,f
   996  0691  0DF6               	rlf	___lmul@multiplicand+2,f
   997  0692  0DF7               	rlf	___lmul@multiplicand+3,f
   998  0693  0B89               	decfsz	9,f
   999  0694  2E8F               	goto	u185
  1000  0695                     l672:
  1001  0695  3001               	movlw	1
  1002  0696                     u195:
  1003  0696  36F3               	lsrf	___lmul@multiplier+3,f
  1004  0697  0CF2               	rrf	___lmul@multiplier+2,f
  1005  0698  0CF1               	rrf	___lmul@multiplier+1,f
  1006  0699  0CF0               	rrf	___lmul@multiplier,f
  1007  069A  0B89               	decfsz	9,f
  1008  069B  2E96               	goto	u195
  1009  069C  0873               	movf	___lmul@multiplier+3,w
  1010  069D  0472               	iorwf	___lmul@multiplier+2,w
  1011  069E  0471               	iorwf	___lmul@multiplier+1,w
  1012  069F  0470               	iorwf	___lmul@multiplier,w
  1013  06A0  1D03               	skipz
  1014  06A1  2EA3               	goto	u201
  1015  06A2  2EA4               	goto	u200
  1016  06A3                     u201:
  1017  06A3  2E82               	goto	l666
  1018  06A4                     u200:
  1019  06A4                     l674:
  1020  06A4  087B               	movf	___lmul@product+3,w
  1021  06A5  00F3               	movwf	?___lmul+3
  1022  06A6  087A               	movf	___lmul@product+2,w
  1023  06A7  00F2               	movwf	?___lmul+2
  1024  06A8  0879               	movf	___lmul@product+1,w
  1025  06A9  00F1               	movwf	?___lmul+1
  1026  06AA  0878               	movf	___lmul@product,w
  1027  06AB  00F0               	movwf	?___lmul
  1028  06AC                     l128:
  1029  06AC  0008               	return
  1030  06AD                     __end_of___lmul:
  1031                           
  1032                           	psect	text3
  1033  076D                     __ptext3:	
  1034 ;; *************** function ___aldiv *****************
  1035 ;; Defined at:
  1036 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  divisor         4    0[BANK0 ] long 
  1039 ;;  dividend        4    4[BANK0 ] long 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  quotient        4   10[BANK0 ] long 
  1042 ;;  sign            1    9[BANK0 ] unsigned char 
  1043 ;;  counter         1    8[BANK0 ] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  4    0[BANK0 ] long 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1053 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1054 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1056 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1057 ;;Total ram usage:       15 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_map
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066  076D                     ___aldiv:	
  1067                           ;psect for function ___aldiv
  1068                           
  1069  076D                     l678:	
  1070                           ;incstack = 0
  1071                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1072                           
  1073  076D  0020               	movlb	0	; select bank0
  1074  076E  01A9               	clrf	___aldiv@sign
  1075  076F                     l680:
  1076  076F  1FA3               	btfss	___aldiv@divisor+3,7
  1077  0770  2F72               	goto	u211
  1078  0771  2F73               	goto	u210
  1079  0772                     u211:
  1080  0772  2F80               	goto	l179
  1081  0773                     u210:
  1082  0773                     l682:
  1083  0773  09A0               	comf	___aldiv@divisor,f
  1084  0774  09A1               	comf	___aldiv@divisor+1,f
  1085  0775  09A2               	comf	___aldiv@divisor+2,f
  1086  0776  09A3               	comf	___aldiv@divisor+3,f
  1087  0777  0AA0               	incf	___aldiv@divisor,f
  1088  0778  1903               	skipnz
  1089  0779  0AA1               	incf	___aldiv@divisor+1,f
  1090  077A  1903               	skipnz
  1091  077B  0AA2               	incf	___aldiv@divisor+2,f
  1092  077C  1903               	skipnz
  1093  077D  0AA3               	incf	___aldiv@divisor+3,f
  1094  077E  01A9               	clrf	___aldiv@sign
  1095  077F  0AA9               	incf	___aldiv@sign,f
  1096  0780                     l179:
  1097  0780  1FA7               	btfss	___aldiv@dividend+3,7
  1098  0781  2F83               	goto	u221
  1099  0782  2F84               	goto	u220
  1100  0783                     u221:
  1101  0783  2F93               	goto	l688
  1102  0784                     u220:
  1103  0784                     l684:
  1104  0784  09A4               	comf	___aldiv@dividend,f
  1105  0785  09A5               	comf	___aldiv@dividend+1,f
  1106  0786  09A6               	comf	___aldiv@dividend+2,f
  1107  0787  09A7               	comf	___aldiv@dividend+3,f
  1108  0788  0AA4               	incf	___aldiv@dividend,f
  1109  0789  1903               	skipnz
  1110  078A  0AA5               	incf	___aldiv@dividend+1,f
  1111  078B  1903               	skipnz
  1112  078C  0AA6               	incf	___aldiv@dividend+2,f
  1113  078D  1903               	skipnz
  1114  078E  0AA7               	incf	___aldiv@dividend+3,f
  1115  078F                     l686:
  1116  078F  3001               	movlw	1
  1117  0790  00FC               	movwf	??___aldiv
  1118  0791  087C               	movf	??___aldiv,w
  1119  0792  06A9               	xorwf	___aldiv@sign,f
  1120  0793                     l688:
  1121  0793  3000               	movlw	0
  1122  0794  00AD               	movwf	___aldiv@quotient+3
  1123  0795  3000               	movlw	0
  1124  0796  00AC               	movwf	___aldiv@quotient+2
  1125  0797  3000               	movlw	0
  1126  0798  00AB               	movwf	___aldiv@quotient+1
  1127  0799  3000               	movlw	0
  1128  079A  00AA               	movwf	___aldiv@quotient
  1129  079B                     l690:
  1130  079B  0823               	movf	___aldiv@divisor+3,w
  1131  079C  0422               	iorwf	___aldiv@divisor+2,w
  1132  079D  0421               	iorwf	___aldiv@divisor+1,w
  1133  079E  0420               	iorwf	___aldiv@divisor,w
  1134  079F  1903               	skipnz
  1135  07A0  2FA2               	goto	u231
  1136  07A1  2FA3               	goto	u230
  1137  07A2                     u231:
  1138  07A2  2FE4               	goto	l710
  1139  07A3                     u230:
  1140  07A3                     l692:
  1141  07A3  01A8               	clrf	___aldiv@counter
  1142  07A4  0AA8               	incf	___aldiv@counter,f
  1143  07A5  2FB1               	goto	l696
  1144  07A6                     l694:
  1145  07A6  3001               	movlw	1
  1146  07A7                     u245:
  1147  07A7  35A0               	lslf	___aldiv@divisor,f
  1148  07A8  0DA1               	rlf	___aldiv@divisor+1,f
  1149  07A9  0DA2               	rlf	___aldiv@divisor+2,f
  1150  07AA  0DA3               	rlf	___aldiv@divisor+3,f
  1151  07AB  0B89               	decfsz	9,f
  1152  07AC  2FA7               	goto	u245
  1153  07AD  3001               	movlw	1
  1154  07AE  00FC               	movwf	??___aldiv
  1155  07AF  087C               	movf	??___aldiv,w
  1156  07B0  07A8               	addwf	___aldiv@counter,f
  1157  07B1                     l696:
  1158  07B1  1FA3               	btfss	___aldiv@divisor+3,7
  1159  07B2  2FB4               	goto	u251
  1160  07B3  2FB5               	goto	u250
  1161  07B4                     u251:
  1162  07B4  2FA6               	goto	l694
  1163  07B5                     u250:
  1164  07B5                     l698:
  1165  07B5  3001               	movlw	1
  1166  07B6                     u265:
  1167  07B6  35AA               	lslf	___aldiv@quotient,f
  1168  07B7  0DAB               	rlf	___aldiv@quotient+1,f
  1169  07B8  0DAC               	rlf	___aldiv@quotient+2,f
  1170  07B9  0DAD               	rlf	___aldiv@quotient+3,f
  1171  07BA  0B89               	decfsz	9,f
  1172  07BB  2FB6               	goto	u265
  1173  07BC                     l700:
  1174  07BC  0823               	movf	___aldiv@divisor+3,w
  1175  07BD  0227               	subwf	___aldiv@dividend+3,w
  1176  07BE  1D03               	skipz
  1177  07BF  2FCA               	goto	u275
  1178  07C0  0822               	movf	___aldiv@divisor+2,w
  1179  07C1  0226               	subwf	___aldiv@dividend+2,w
  1180  07C2  1D03               	skipz
  1181  07C3  2FCA               	goto	u275
  1182  07C4  0821               	movf	___aldiv@divisor+1,w
  1183  07C5  0225               	subwf	___aldiv@dividend+1,w
  1184  07C6  1D03               	skipz
  1185  07C7  2FCA               	goto	u275
  1186  07C8  0820               	movf	___aldiv@divisor,w
  1187  07C9  0224               	subwf	___aldiv@dividend,w
  1188  07CA                     u275:
  1189  07CA  1C03               	skipc
  1190  07CB  2FCD               	goto	u271
  1191  07CC  2FCE               	goto	u270
  1192  07CD                     u271:
  1193  07CD  2FD7               	goto	l706
  1194  07CE                     u270:
  1195  07CE                     l702:
  1196  07CE  0820               	movf	___aldiv@divisor,w
  1197  07CF  02A4               	subwf	___aldiv@dividend,f
  1198  07D0  0821               	movf	___aldiv@divisor+1,w
  1199  07D1  3BA5               	subwfb	___aldiv@dividend+1,f
  1200  07D2  0822               	movf	___aldiv@divisor+2,w
  1201  07D3  3BA6               	subwfb	___aldiv@dividend+2,f
  1202  07D4  0823               	movf	___aldiv@divisor+3,w
  1203  07D5  3BA7               	subwfb	___aldiv@dividend+3,f
  1204  07D6                     l704:
  1205  07D6  142A               	bsf	___aldiv@quotient,0
  1206  07D7                     l706:
  1207  07D7  3001               	movlw	1
  1208  07D8                     u285:
  1209  07D8  36A3               	lsrf	___aldiv@divisor+3,f
  1210  07D9  0CA2               	rrf	___aldiv@divisor+2,f
  1211  07DA  0CA1               	rrf	___aldiv@divisor+1,f
  1212  07DB  0CA0               	rrf	___aldiv@divisor,f
  1213  07DC  0B89               	decfsz	9,f
  1214  07DD  2FD8               	goto	u285
  1215  07DE                     l708:
  1216  07DE  3001               	movlw	1
  1217  07DF  02A8               	subwf	___aldiv@counter,f
  1218  07E0  1D03               	btfss	3,2
  1219  07E1  2FE3               	goto	u291
  1220  07E2  2FE4               	goto	u290
  1221  07E3                     u291:
  1222  07E3  2FB5               	goto	l698
  1223  07E4                     u290:
  1224  07E4                     l710:
  1225  07E4  0829               	movf	___aldiv@sign,w
  1226  07E5  1903               	btfsc	3,2
  1227  07E6  2FE8               	goto	u301
  1228  07E7  2FE9               	goto	u300
  1229  07E8                     u301:
  1230  07E8  2FF4               	goto	l714
  1231  07E9                     u300:
  1232  07E9                     l712:
  1233  07E9  09AA               	comf	___aldiv@quotient,f
  1234  07EA  09AB               	comf	___aldiv@quotient+1,f
  1235  07EB  09AC               	comf	___aldiv@quotient+2,f
  1236  07EC  09AD               	comf	___aldiv@quotient+3,f
  1237  07ED  0AAA               	incf	___aldiv@quotient,f
  1238  07EE  1903               	skipnz
  1239  07EF  0AAB               	incf	___aldiv@quotient+1,f
  1240  07F0  1903               	skipnz
  1241  07F1  0AAC               	incf	___aldiv@quotient+2,f
  1242  07F2  1903               	skipnz
  1243  07F3  0AAD               	incf	___aldiv@quotient+3,f
  1244  07F4                     l714:
  1245  07F4  082D               	movf	___aldiv@quotient+3,w
  1246  07F5  00A3               	movwf	?___aldiv+3
  1247  07F6  082C               	movf	___aldiv@quotient+2,w
  1248  07F7  00A2               	movwf	?___aldiv+2
  1249  07F8  082B               	movf	___aldiv@quotient+1,w
  1250  07F9  00A1               	movwf	?___aldiv+1
  1251  07FA  082A               	movf	___aldiv@quotient,w
  1252  07FB  00A0               	movwf	?___aldiv
  1253  07FC                     l189:
  1254  07FC  0008               	return
  1255  07FD                     __end_of___aldiv:
  1256                           
  1257                           	psect	text4
  1258  066A                     __ptext4:	
  1259 ;; *************** function _delay_us *****************
  1260 ;; Defined at:
  1261 ;;		line 50 in file "main.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  us              2    0[COMMON] unsigned short 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;Total ram usage:        2 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288  066A                     _delay_us:	
  1289                           ;psect for function _delay_us
  1290                           
  1291  066A                     l734:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  1294                           
  1295                           
  1296                           ;main.c: 51:     while (us--) {
  1297  066A  2E6D               	goto	l736
  1298  066B                     l36:
  1299                           
  1300                           ;main.c: 52:         _delay((unsigned long)((1)*(16000000UL/4000000.0)));
  1301  066B  3200               	nop2	;2 cycle nop
  1302  066C  3200               	nop2	;2 cycle nop
  1303  066D                     l736:
  1304                           
  1305                           ;main.c: 51:     while (us--) {
  1306  066D  3001               	movlw	1
  1307  066E  02F0               	subwf	delay_us@us,f
  1308  066F  3000               	movlw	0
  1309  0670  3BF1               	subwfb	delay_us@us+1,f
  1310  0671  0A70               	incf	delay_us@us,w
  1311  0672  1D03               	skipz
  1312  0673  2E78               	goto	u321
  1313  0674  0A71               	incf	delay_us@us+1,w
  1314  0675  1D03               	btfss	3,2
  1315  0676  2E78               	goto	u321
  1316  0677  2E79               	goto	u320
  1317  0678                     u321:
  1318  0678  2E6B               	goto	l36
  1319  0679                     u320:
  1320  0679                     l38:
  1321  0679  0008               	return
  1322  067A                     __end_of_delay_us:
  1323                           
  1324                           	psect	text5
  1325  065B                     __ptext5:	
  1326 ;; *************** function _ADC_Read *****************
  1327 ;; Defined at:
  1328 ;;		line 43 in file "main.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  2    0[COMMON] unsigned short 
  1335 ;; Registers used:
  1336 ;;		wreg
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1346 ;;Total ram usage:        2 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355  065B                     _ADC_Read:	
  1356                           ;psect for function _ADC_Read
  1357                           
  1358  065B                     l726:	
  1359                           ;incstack = 0
  1360                           ; Regs used in _ADC_Read: [wreg]
  1361                           
  1362                           
  1363                           ;main.c: 44:     _delay((unsigned long)((5)*(16000000UL/4000000.0)));
  1364  065B  3006               	movlw	6
  1365  065C                     u337:
  1366  065C  0B89               	decfsz	9,f
  1367  065D  2E5C               	goto	u337
  1368  065E  3200               	nop2
  1369  065F                     l728:
  1370                           
  1371                           ;main.c: 45:     ADCON0bits.GO = 1;
  1372  065F  0021               	movlb	1	; select bank1
  1373  0660  149D               	bsf	29,1	;volatile
  1374  0661                     l29:	
  1375                           ;main.c: 46:     while (ADCON0bits.GO);
  1376                           
  1377  0661  189D               	btfsc	29,1	;volatile
  1378  0662  2E64               	goto	u311
  1379  0663  2E65               	goto	u310
  1380  0664                     u311:
  1381  0664  2E61               	goto	l29
  1382  0665                     u310:
  1383  0665                     l730:
  1384                           
  1385                           ;main.c: 47:     return ((ADRESH << 8) + ADRESL);
  1386  0665  081C               	movf	28,w	;volatile
  1387  0666  00F1               	movwf	?_ADC_Read+1
  1388  0667  081B               	movf	27,w	;volatile
  1389  0668  00F0               	movwf	?_ADC_Read
  1390  0669                     l32:
  1391  0669  0008               	return
  1392  066A                     __end_of_ADC_Read:
  1393                           
  1394                           	psect	text6
  1395  0651                     __ptext6:	
  1396 ;; *************** function _ADC_Init *****************
  1397 ;; Defined at:
  1398 ;;		line 36 in file "main.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425  0651                     _ADC_Init:	
  1426                           ;psect for function _ADC_Init
  1427                           
  1428  0651                     l722:	
  1429                           ;incstack = 0
  1430                           ; Regs used in _ADC_Init: [wreg]
  1431                           
  1432                           
  1433                           ;main.c: 37:     ANSELA = 0x01;
  1434  0651  3001               	movlw	1
  1435  0652  0023               	movlb	3	; select bank3
  1436  0653  008C               	movwf	12	;volatile
  1437  0654                     l724:
  1438                           
  1439                           ;main.c: 38:     TRISAbits.TRISA0 = 1;
  1440  0654  0021               	movlb	1	; select bank1
  1441  0655  140C               	bsf	12,0	;volatile
  1442                           
  1443                           ;main.c: 39:     ADCON0 = 0x01;
  1444  0656  3001               	movlw	1
  1445  0657  009D               	movwf	29	;volatile
  1446                           
  1447                           ;main.c: 40:     ADCON1 = 0x30;
  1448  0658  3030               	movlw	48
  1449  0659  009E               	movwf	30	;volatile
  1450  065A                     l26:
  1451  065A  0008               	return
  1452  065B                     __end_of_ADC_Init:
  1453  007E                     btemp	set	126	;btemp
  1454  007E                     wtemp0	set	126
  1455                           
  1456                           	psect	config
  1457                           
  1458                           ;Config register CONFIG1 @ 0x8007
  1459                           ;	Oscillator Selection Bits
  1460                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1461                           ;	Watchdog Timer Enable
  1462                           ;	WDTE = OFF, WDT disabled
  1463                           ;	Power-up Timer Enable
  1464                           ;	PWRTE = ON, PWRT enabled
  1465                           ;	MCLR Pin Function Select
  1466                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1467                           ;	Flash Program Memory Code Protection
  1468                           ;	CP = OFF, Program memory code protection is disabled
  1469                           ;	Brown-out Reset Enable
  1470                           ;	BOREN = OFF, Brown-out Reset disabled
  1471                           ;	Clock Out Enable
  1472                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1473                           ;	Internal/External Switchover Mode
  1474                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  1475                           ;	Fail-Safe Clock Monitor Enable
  1476                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1477  8007                     	org	32775
  1478  8007  39C4               	dw	14788
  1479                           
  1480                           ;Config register CONFIG2 @ 0x8008
  1481                           ;	Flash Memory Self-Write Protection
  1482                           ;	WRT = OFF, Write protection off
  1483                           ;	Peripheral Pin Select one-way control
  1484                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  1485                           ;	Zero-cross detect disable
  1486                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  1487                           ;	Phase Lock Loop enable
  1488                           ;	PLLEN = ON, 4x PLL is always enabled
  1489                           ;	Stack Overflow/Underflow Reset Enable
  1490                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1491                           ;	Brown-out Reset Voltage Selection
  1492                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1493                           ;	Low-Power Brown Out Reset
  1494                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1495                           ;	In-Circuit Debugger Mode
  1496                           ;	DEBUG = OFF, In-Circuit Debugger disabled, ICSPCLK and ICSPDAT are general purpose I/O
      +                           pins
  1497                           ;	Low-Voltage Programming Enable
  1498                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1499  8008                     	org	32776
  1500  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     58      58
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _map->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_map
    _map->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1495
                                             50 BANK0      8     8      0
                           _ADC_Init
                           _ADC_Read
                           _delay_us
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 36    16     20    1230
                                             14 BANK0     36    16     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _delay_us                                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _delay_us
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      3A       5       72.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 27 23:39:18 2025

                     l23 076C                       l32 0669                       l26 065A  
                     l36 066B                       l29 0661                       l38 0679  
                    l128 06AC                      l179 0780                      l700 07BC  
                    l189 07FC                      l702 07CE                      l710 07E4  
                    l712 07E9                      l704 07D6                      l722 0651  
                    l730 0665                      l714 07F4                      l706 07D7  
                    l724 0654                      l708 07DE                      l740 06B1  
                    l726 065B                      l734 066A                      l670 068E  
                    l718 070B                      l750 06F6                      l742 06B4  
                    l728 065F                      l736 066D                      l680 076F  
                    l672 0695                      l664 067A                      l752 06FE  
                    l744 06BC                      l690 079B                      l682 0773  
                    l674 06A4                      l666 0682                      l754 0700  
                    l746 06EA                      l738 06AD                      l692 07A3  
                    l684 0784                      l668 0686                      l748 06F4  
                    l694 07A6                      l686 078F                      l678 076D  
                    l696 07B1                      l688 0793                      l698 07B5  
                    u200 06A4                      u201 06A3                      u210 0773  
                    u211 0772                      u300 07E9                      u220 0784  
                    u301 07E8                      u221 0783                      u310 0665  
                    u230 07A3                      u311 0664                      u231 07A2  
                    u320 0679                      u321 0678                      u250 07B5  
                    u170 0686                      u251 07B4                      u171 0685  
                    u245 07A7                      u270 07CE                      u271 07CD  
                    u337 065C                      u265 07B6                      u185 068F  
                    u290 07E4                      u291 07E3                      u275 07CA  
                    u195 0696                      u285 07D8                      _map 070B  
                    wreg 0009                     ?_map 002E                     _main 06AD  
                   map@x 002E                     btemp 007E         __end_of_ADC_Init 065B  
       __end_of_ADC_Read 066A                     start 0002                    ??_map 0042  
        __end_of___aldiv 07FD                    ?_main 0070      ___lmul@multiplicand 0074  
                  status 0003                    wtemp0 007E            main@adc_value 0054  
        __initialization 07FD             __end_of_main 070B                   ??_main 0052  
                 _ADCON0 009D                   _ADCON1 009E                   _ADRESH 009C  
                 _ADRESL 009B                   _ANSELA 018C         __end_of_delay_us 067A  
                 ___lmul 067A                ??___aldiv 007C            main@period_us 0056  
              ?_ADC_Init 0070                ?_ADC_Read 0070  __end_of__initialization 07FD  
         __pcstackCOMMON 0070               ??_ADC_Init 0070               ??_ADC_Read 0072  
             __pmaintext 06AD                  ?___lmul 0070           ___lmul@product 0078  
              ?_delay_us 0070                  ___aldiv 076D                  __ptext1 070B  
                __ptext2 067A                  __ptext3 076D                  __ptext4 066A  
                __ptext5 065B                  __ptext6 0651         ___aldiv@dividend 0024  
             ??_delay_us 0072     end_of_initialization 07FD               delay_us@us 0070  
       ___aldiv@quotient 002A                _TRISAbits 008C                _TRISCbits 008E  
             map@out_max 003E               map@out_min 003A           __end_of___lmul 06AD  
    start_initialization 07FD              __end_of_map 076D                 ??___lmul 0078  
        main@half_period 0058                ___latbits 0002            __pcstackBANK0 0020  
               ?___aldiv 0020                 _ADC_Init 0651                 _ADC_Read 065B  
        ___aldiv@divisor 0020          ___aldiv@counter 0028                 _LATCbits 010E  
              map@in_max 0036                map@in_min 0032               _ADCON0bits 009D  
      ___lmul@multiplier 0070                 _delay_us 066A             ___aldiv@sign 0029  
